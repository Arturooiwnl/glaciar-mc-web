---

import ShopIcon from './icons/shopIcon.astro';

interface Props {
	actualPage?: string;
}

const starsCounter = 0;

const NAVIGATIONS = [
    { name: 'Inicio', href: '#inicio' },
    { name: 'Sobre Nosotros', href: '#sobre-nosotros' },
    { name: 'Modalidades', href: '#modalidades' },
    { name: 'Staff', href: '#staff' }
];

---

<header class="rounded-b-md dark:text-gray-50 relative z-50 w-full">
	<div class=" bg-slate-950/30 backdrop-blur-md shadow-md fixed top-0 left-1/2 -translate-x-1/2 container mx-auto flex justify-between items-center px-7 py-4 rounded-none sm:rounded-b-2xl">
		<div class="flex items-center text-white">
            <a class="flex justify-center items-center" href="/">
			<img class="h-10 w-10 sm:h-12 sm:w-12" src="/logo.png" alt="logo de Infinite Repo">
            </a>
		</div>

		<nav class="">
            <ul class="hidden sm:flex justify-start items-center gap-6 text-lg">
                {NAVIGATIONS.map((nav) => (
                    <li>
                    <a href={nav.href} class="relative inline-block font-Chakra text-white group">
                        <span class="dark:text-gray-100 text-gray-900 transition-all duration-300">
                        {nav.name}
                        </span>
                        <span class="absolute left-1/2 bottom-0 w-0 h-[2px] bg-gradient-to-r from-[#7ADBF7] via-[#4AB5E4] to-[#2A6BA9] transition-all duration-300 group-hover:w-full group-hover:left-0"></span>
                    </a>
                    </li>
                ))}
            </ul>
		</nav>

        <div class="sm:hidden">
            <button id="hamburger-menu" class="group cursor-pointer flex flex-col justify-center items-center w-10 h-10 border border-slate-700 rounded-md transition-all duration-300">
                <span class="line1 block w-6 h-0.5 bg-white mb-1 transform transition-all duration-300 origin-center"></span>
                <span class="line2 block w-6 h-0.5 bg-white mb-1 transition-all duration-300"></span>
                <span class="line3 block w-6 h-0.5 bg-white transform transition-all duration-300 origin-center"></span>
            </button>
        </div>

    <div class="flex sm:hidden"></div>
    <nav class="flex sm:hidden fixed bottom-[-175px] left-0 w-full z-50 bg-slate-950/60"> 
        <ul id="mobile-menu" class="w-full hidden flex-col items-start gap-8 text-lg border-b border-slate-70 shadow-md p-5">
            {NAVIGATIONS.map((nav) => (
                    <li class="mb-2">
                    <a href={nav.href} class="relative inline-block font-Chakra text-white group">
                        <span class="dark:text-gray-100 text-gray-900 transition-all duration-300">
                        {nav.name}
                        </span>
                        <span class="absolute left-1/2 bottom-0 w-0 h-[2px] bg-gradient-to-r from-[#7ADBF7] via-[#4AB5E4] to-[#2A6BA9] transition-all duration-300 group-hover:w-full group-hover:left-0"></span>
                    </a>
                    </li>
            ))}
        </ul>
    </nav>
		<div class="group mt-2">
            <a class="font-Chakra bg-gradient-to-r from-sky-600 to-sky-800 hover:saturate-150 hover:scale-105 transition-all duration-300 rounded-md flex gap-2 justify-center items-center px-2 py-2 cursor-pointer" target="_blank"><ShopIcon class="size-5 group-hover:-rotate-5 transition-transform duration-300"/><span class="hidden sm:flex">Tienda</span></a>
		</div>
	</div>
</header>

<style>


    #hamburger-menu.open .line1 {
        transform: rotate(45deg) translateY(8px);
        margin-left: 10px
        
    }
    #hamburger-menu.open .line2 {
        opacity: 0;
    }
    #hamburger-menu.open .line3 {
        transform: rotate(-45deg) translateY(-8px);
        margin-left: 10px
    }
</style>


<script is:inline>

    const hamburgerMenu = document.getElementById('hamburger-menu');
    const mobileMenu = document.getElementById('mobile-menu');
    const navigationLinks = mobileMenu.querySelectorAll('a');

    hamburgerMenu.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
        hamburgerMenu.classList.toggle('open'); 
    });

    document.addEventListener('click', (event) => {
        if (!hamburgerMenu.contains(event.target) && !mobileMenu.contains(event.target)) {
            mobileMenu.classList.add('hidden');
            hamburgerMenu.classList.remove('open'); 
        }
    });

    navigationLinks.forEach((link) => {
        link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
            hamburgerMenu.classList.remove('open');
        });
    });


</script>
